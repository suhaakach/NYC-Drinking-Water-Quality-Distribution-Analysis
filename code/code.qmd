---
title: "Final Project"
author: "Suha Akach & Isabelle Perez"
toc: true
number-sections: true
highlight-style: pygments
format: 
  html: 
    code-fold: true
    html-math-method: katex
  pdf: 
    geometry: 
      - top=30mm
      - left=20mm
  docx: default
---

# Import Data & Necessary Packages

```{python}
import pandas as pd
import numpy as np
```

```{python}
data = pd.read_csv('../data/Drinking_Water_Quality_Distribution_Monitoring_Data_20241116.csv',
                                                                                low_memory = False)
samp_sites = pd.read_csv('../data/sampling_sites.csv')
```

# Data Cleaning 

```{python}
# rename columns
data.rename(columns = {'Sample Date': 'sample_date', 'Sample Site': 'sample_site', 
              'Sample class': 'sample_class', 'Residual Free Chlorine (mg/L)': 'chlorine',
              'Turbidity (NTU)': 'turbidity', 'Coliform (Quanti-Tray) (MPN /100mL)': 'coliform',
                                      'E.coli(Quanti-Tray) (MPN/100mL)': 'ecoli'}, inplace = True)

samp_sites.rename(columns = {'Sample Site': 'sample_site', 'X - Coordinate': 'x_coord',
                                            'Y - Coordinate': 'y_coord'}, inplace = True)
samp_sites.drop(columns = ['\n'], inplace = True)
```

```{python}
# ensure sample time column is clean
data.dropna(subset = ['Sample Time'], inplace = True)

# standardize format of sample time
data['Sample Time'] = data['Sample Time'].apply(lambda x: x[11:16] if len(x) > 5 else x)

# change to datetime format
data['sample_date'] = pd.to_datetime(data['sample_date'] + ' ' + data['Sample Time'])

# change turbidity to float
data.loc[data['turbidity'] == '<0.10', 'turbidity'] = '0.10'
data['turbidity'] = data['turbidity'].apply(lambda x: float(x))
```

```{python}
# drop unecessary columns and rows
data.drop(columns = ['Sample Number', 'Fluoride (mg/L)', 'Sample Time'], inplace = True)
```

```{python}
# impute non-float values
catval = {'<0.10': float(0.09), '<1': float(0.99), '>200.5': float(200.6)}
data = data.replace(catval)

# change data types to float
data['chlorine'] = data['chlorine'].astype(float)
data['coliform'] = data['coliform'].astype(float)
data['ecoli'] = data['ecoli'].astype(float)
```

```{python}
# check to make sure all values are possible
data = data[data['chlorine'] > 0]
data = data[data['coliform'] > 0]
data = data[data['ecoli'] > 0]
```

```{python}
# only 4 missing values total - drop
data = data.dropna()

data.shape
```

```{python}
# merge with location based information
sites = pd.read_csv('../data/sampling_sites_extended.csv')
sites.rename(columns = {'Sample Site': 'sample_site'}, inplace = True)

data = pd.merge(data, sites, on = 'sample_site')

data = data.drop(columns = ['OBJECTID', 'Sample Station (SS) - Location Description', 
                                'X - Coordinate', 'Y - Coordinate', 'City or Placename'])
```

```{python}
data.head()
```

## Modelling